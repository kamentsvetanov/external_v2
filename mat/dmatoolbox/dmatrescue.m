function dmatrescue(varargin)
%DMATRESCUE  Rescue tool for recovering DMAT back-ups
%
%   Author: Joachim Vandekerckhove (joachim.vandekerckhove@psy.kuleuven.be)
%   Part of the DMA Toolbox. Please read the End User License Agreement,
%   contained in 'dmateula.txt' or by invoking the DMATLICENSE command. 
%   See also http://ppw.kuleuven.be/okp/dmatoolbox.

%  Edit 0.4: Fixed button that would crash if no temp files found.

if nargin && isa(varargin{1},'function_handle')
    feval(varargin{:});
else
    handles.mw = [];
    OpeningFcn
end

%%
    function OpeningFcn
        tq = [];
        cs = [];
        qenable = 'off';
        toenable = 'off';
        tqenable = 'off';
        histenable = 'off';
        outputenable = 'off';
        bothenable = 'off';
        csenable = 'off';

        if exist('~$queuetemp.mat','file')>0
            to = load('~$queuetemp.mat');
            toenable = 'on';
        else
            to = struct();
        end

        if exist('~$lastqueue.mat','file')>0
            tq = load('~$lastqueue.mat');
            tqenable = 'on';
        else
            tq = struct();
        end

        if exist('~$crash.dmt','file')>0
            cs = load('~$crash.dmt','-mat');
            if isfield(cs.DMAT,'Queue') && ~isempty(cs.DMAT.Queue)
                qenable = 'on';
            end
            if isfield(cs.DMAT,'History') && ~isempty(cs.DMAT.History)
                histenable = 'on';
            end
            if isfield(cs.DMAT,'Output') && ~isempty(cs.DMAT.Output)
                outputenable = 'on';
            end
            if isfield(cs.DMAT,'Output') && ~isempty(cs.DMAT.Output) && ...
                    isfield(cs.DMAT,'History') && ~isempty(cs.DMAT.History)
                bothenable = 'on';
            end
            csenable = 'on';
        else
            cs = struct();
        end

        handles.mw = figure(...
            'NumberTitle','off',...
            'Toolbar','None',...            'Menubar','None',...
            'Name','DMAT Rescue Tool',...
            'Units','normalized',...
            'WindowStyle','modal',...
            'Position',[.25 .4 .2 .52]);

        uipanel(...
            'Parent',handles.mw,...
            'Title','Emergency Back-Ups',...
            'Units','normalized',...
            'Position',[.05 .04 .9 .61]);
        uipanel(...
            'Parent',handles.mw,...
            'Title','Standard Back-Ups',...
            'Units','normalized',...
            'Position',[.05 .68 .9 .28]);

        uicontrol(...
            'Parent',handles.mw,...
            'Style','PushButton',...
            'String','Save Session to *.DMS file',...
            'Units','normalized',...
            'Position',[.1 .51 .8 .09],...
            'Enable',csenable,...
            'Callback',@(y,z)dmatrescue(@(x)rec_Callback(cs,'s')));
        uicontrol(...
            'Parent',handles.mw,...
            'Style','PushButton',...
            'String','Save Output to *.DMO file',...
            'Units','normalized',...
            'Position',[.1 .40 .8 .09],...
            'Enable',outputenable,...
            'Callback',@(y,z)dmatrescue(@(x)rec_Callback(cs,'eo')));
        uicontrol(...
            'Parent',handles.mw,...
            'Style','PushButton',...
            'String','Save Queue to *.DMQ file',...
            'Units','normalized',...
            'Position',[.1 .29 .8 .09],...
            'Enable',qenable,...
            'Callback',@(y,z)dmatrescue(@(x)rec_Callback(cs,'qq')));
        uicontrol(...
            'Parent',handles.mw,...
            'Style','PushButton',...
            'String','Save History to *.DMQ file',...
            'Units','normalized',...
            'Position',[.1 .18 .8 .09],...
            'Enable',histenable,...
            'Callback',@(y,z)dmatrescue(@(x)rec_Callback(cs,'hq')));
        uicontrol(...
            'Parent',handles.mw,...
            'Style','PushButton',...
            'String','Merge History and Queue',...
            'Units','normalized',...
            'Position',[.1 .07 .8 .09],...
            'Enable',bothenable,...
            'Callback',@(y,z)dmatrescue(@(x)rec_Callback(cs,'bq')));

        uicontrol(...
            'Parent',handles.mw,...
            'Style','PushButton',...
            'String','Save Queue to *.DMQ file',...
            'Units','normalized',...
            'Position',[.1 .71 .8 .09],...
            'Enable',tqenable,...
            'Callback',@(y,z)dmatrescue(@(x)rec_Callback(tq,'sq')));
        uicontrol(...
            'Parent',handles.mw,...
            'Style','PushButton',...
            'String','Save Output to *.DMO file',...
            'Units','normalized',...
            'Position',[.1 .82 .8 .09],...
            'Enable',toenable,...
            'Callback',@(y,z)dmatrescue(@(x)rec_Callback(to,'so')));
        %%
    end

    function rec_Callback(structure,option)

        switch option
            case {'eo' 'so'}
                [fn, pat] = uiputfile({'*.dmo','DMA Output (*.dmo)'},...
                    'Save output as',sprintf('RecoveredOutput%s',...
                    datestr(now,30)));
            case 's'
                [fn, pat] = uiputfile({'*.dms','DMA Session (*.dms)'},...
                    'Save session as',sprintf('RecoveredSession%s',...
                    datestr(now,30)));
            case {'qq' 'hq' 'bq' 'sq'}
                [fn, pat] = uiputfile({'*.dmq','DMA Queues (*.dmq)'},...
                    'Save queue as',sprintf('RecoveredQueue%s',...
                    datestr(now,30)));
        end

        if ~isempty(fn) && ischar(fn)

            switch option
                case 'eo'
                    output = structure.DMAT.Output; %#ok
                    data = structure.DMAT.Data.Dataset; %#ok
                    save(fullfile(pat,fn),'output','data');
                case 'so'
                    output = structure.output; %#ok
                    data = structure.data; %#ok
                    save(fullfile(pat,fn),'output','data');
                case 'sq'
                    queue = structure.queue; %#ok
                    save(fullfile(pat,fn),'queue')
                case 's'
                    DMAT = structure.DMAT; %#ok
                    save(fullfile(pat,fn),'DMAT');
                case 'qq'
                    queue = structure.DMAT.Options; %#ok
                    save(fullfile(pat,fn),'queue')
                case 'hq'
                    queue = structure.DMAT.History; %#ok
                    save(fullfile(pat,fn),'queue')
                case 'bq'
                    queue = [structure.DMAT.History(:)
                        structure.DMAT.Options(:)]'; %#ok
                    save(fullfile(pat,fn),'queue')
            end
        end

    end


end